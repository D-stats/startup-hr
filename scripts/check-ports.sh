#!/bin/bash

# „Éù„Éº„ÉàÁ´∂Âêà„ÉÅ„Çß„ÉÉ„ÇØ„Çπ„ÇØ„É™„Éó„Éà
# ÈñãÁô∫Áí∞Â¢É„ÅßÂøÖË¶Å„Å™„Éù„Éº„Éà„ÅåÂà©Áî®ÂèØËÉΩ„Åã„ÉÅ„Çß„ÉÉ„ÇØ„Åô„Çã

set -e

# „Ç´„É©„ÉºÂá∫ÂäõÁî®„ÅÆÂÆöÁæ©
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# „Éá„Éï„Ç©„É´„Éà„Éù„Éº„ÉàÔºàÁí∞Â¢ÉÂ§âÊï∞„Åß‰∏äÊõ∏„ÅçÂèØËÉΩÔºâ
NEXT_PORT=${PORT:-3000}
SUPABASE_API_PORT=${SUPABASE_API_PORT:-54321}
SUPABASE_DB_PORT=${SUPABASE_DB_PORT:-54322}
SUPABASE_STUDIO_PORT=${SUPABASE_STUDIO_PORT:-54323}
SUPABASE_INBUCKET_PORT=${SUPABASE_INBUCKET_PORT:-54324}

# „ÉÅ„Çß„ÉÉ„ÇØ„É¢„Éº„ÉâÔºàÁí∞Â¢ÉÂ§âÊï∞„ÅßÂà∂Âæ°Ôºâ
CHECK_SUPABASE=${CHECK_SUPABASE:-false}

# „ÉÅ„Çß„ÉÉ„ÇØÂØæË±°„ÅÆ„Éù„Éº„ÉàÈÖçÂàó
if [ "$CHECK_SUPABASE" = "true" ]; then
  # Supabase„Éù„Éº„Éà„ÇÇÂê´„ÇÅ„Å¶„ÉÅ„Çß„ÉÉ„ÇØ
  declare -A PORTS=(
    ["Next.js"]=$NEXT_PORT
    ["Supabase API"]=$SUPABASE_API_PORT
    ["Supabase DB"]=$SUPABASE_DB_PORT
    ["Supabase Studio"]=$SUPABASE_STUDIO_PORT
    ["Inbucket Mail"]=$SUPABASE_INBUCKET_PORT
  )
else
  # Next.js„Éù„Éº„Éà„ÅÆ„Åø„ÉÅ„Çß„ÉÉ„ÇØÔºàÈÄöÂ∏∏„ÅÆÈñãÁô∫ÊôÇÔºâ
  declare -A PORTS=(
    ["Next.js"]=$NEXT_PORT
  )
fi

# „Éù„Éº„Éà„ÉÅ„Çß„ÉÉ„ÇØÈñ¢Êï∞
check_port() {
  local port=$1
  local service=$2
  
  if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo -e "${RED}‚úó${NC} Port ${YELLOW}$port${NC} is already in use (required for $service)"
    return 1
  else
    echo -e "${GREEN}‚úì${NC} Port ${YELLOW}$port${NC} is available ($service)"
    return 0
  fi
}

# „Éù„Éº„Éà‰ΩøÁî®„Éó„É≠„Çª„Çπ„ÇíË°®Á§∫
show_port_usage() {
  local port=$1
  echo -e "${YELLOW}Process using port $port:${NC}"
  lsof -i :$port | grep LISTEN || echo "Could not identify process"
}

# ‰ª£Êõø„Éù„Éº„Éà„ÇíÊèêÊ°à
suggest_alternative() {
  local base_port=$1
  local service=$2
  local alt_port=$((base_port + 1))
  
  while lsof -Pi :$alt_port -sTCP:LISTEN -t >/dev/null 2>&1; do
    alt_port=$((alt_port + 1))
  done
  
  echo -e "${GREEN}Suggested alternative port for $service: $alt_port${NC}"
  echo "You can use: PORT=$alt_port npm run dev"
}

# „É°„Ç§„É≥„ÉÅ„Çß„ÉÉ„ÇØÂá¶ÁêÜ
echo "üîç Checking required ports for development environment..."
echo ""

ALL_CLEAR=true

for service in "${!PORTS[@]}"; do
  port=${PORTS[$service]}
  if ! check_port $port "$service"; then
    ALL_CLEAR=false
    show_port_usage $port
    suggest_alternative $port "$service"
    echo ""
  fi
done

echo ""

if [ "$ALL_CLEAR" = true ]; then
  echo -e "${GREEN}‚úÖ All ports are available! You can start the development environment.${NC}"
  exit 0
else
  echo -e "${RED}‚ùå Some ports are in use. Please free them or use alternative ports.${NC}"
  echo ""
  echo "Quick fixes:"
  echo "1. Kill process using a port: kill -9 \$(lsof -ti:PORT)"
  echo "2. Use alternative port: PORT=3001 npm run dev"
  echo "3. Stop all services: npm run stop:all"
  exit 1
fi