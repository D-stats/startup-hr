version: '3.8'

# Network definition
networks:
  team-spark-network:
    driver: bridge

services:
  # PostgreSQL database (internal communication only)
  postgres:
    image: postgres:16-alpine
    container_name: team-spark-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: team_spark_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - team-spark-network
    # Expose to host for development
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for session management, internal communication only)
  redis:
    image: redis:7-alpine
    container_name: team-spark-redis
    restart: unless-stopped
    networks:
      - team-spark-network
    expose:
      - '6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Mail server (development, expose Web UI only)
  mailhog:
    image: mailhog/mailhog
    container_name: team-spark-mail
    restart: unless-stopped
    networks:
      - team-spark-network
    ports:
      # Expose Web UI only (SMTP for internal communication only)
      - '${MAILHOG_UI_PORT:-8025}:8025'
    expose:
      - '1025' # SMTP

  # Next.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: team-spark-app
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/team_spark_dev
      REDIS_URL: redis://redis:6379
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      NEXT_PUBLIC_APP_URL: http://localhost:${PORT:-3000}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    ports:
      - '${PORT:-3000}:3000'
    networks:
      - team-spark-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

# Named volumes
volumes:
  postgres_data:
    name: team-spark-postgres-data
